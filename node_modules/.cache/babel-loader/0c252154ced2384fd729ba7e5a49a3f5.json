{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jsagar2\\\\JavaFullStackCourse\\\\my-first-app\\\\src\\\\components\\\\ToDo\\\\ListToDoComponent.jsx\";\nimport React, { Component } from 'react';\nimport \"./ToDoApp.css\";\nimport propTypes from \"prop-types\";\nimport { BrowserRouter as Router, Route, Switch, Link } from 'react-router-dom';\nimport AuthenticationService from './AuthenticationService.js';\nimport AuthenticatedRoute from \"./AuthenticatedRoute.jsx\";\nimport TodoDataService from \"../../api/todo/TodoDataService.js\";\nimport TodoComponent from \"./TodoComponent\";\nimport moment from 'moment';\n\nclass ListToDoComponent extends Component {\n  // Initial API call should not be done in constructor, the state will not be initialized untill the API call is completed, which s nto a good state to be in\n  constructor(props) {\n    super(props);\n    this.state = {\n      todos: [// {id:1,description :\"Learn React\", done:false, targetDate : new Date},\n        // {id:2,description :\"Make money\", done:false, targetDate : new Date},\n        // {id:3,description :\"write story\", done:false, targetDate : new Date}\n      ],\n      successMessage: null,\n      failureMessage: null\n    };\n    this.deleteTodoClicked = this.deleteTodoClicked.bind(this);\n    this.updateTodoClicked = this.updateTodoClicked.bind(this);\n    this.refreshTodos = this.refreshTodos.bind(this);\n  }\n\n  componentDidMount() {\n    // when component is mounted, this method is called \n    let username = AuthenticationService.getLoggedInUsername();\n    TodoDataService.retrieveAllTodos(username).then(response => {\n      //console.log(response)\n      this.setState({\n        todos: response.data\n      });\n    });\n  }\n\n  refreshTodos() {\n    let username = AuthenticationService.getLoggedInUsername(); // this.state.successMessage = null;\n    // this.state.failureMessage = null;\n\n    TodoDataService.retrieveAllTodos(username).then(response => {\n      //console.log(response)\n      this.setState({\n        todos: response.data\n      });\n    });\n  }\n\n  deleteTodoClicked(id) {\n    let username = AuthenticationService.getLoggedInUsername();\n    TodoDataService.deleteTodo(username, id).then(response => {\n      this.setState({\n        successMessage: \"Todo deleted succesfully\"\n      });\n      this.refreshTodos();\n    }).catch(error => {\n      this.setState({\n        failureMessage: \"Some error occured\"\n      });\n    });\n  }\n\n  updateTodoClicked(id) {\n    let username = AuthenticationService.getLoggedInUsername();\n    TodoDataService.deleteTodo(username, id).then(response => {\n      this.setState({\n        message: \"Todo deleted succesfully\"\n      });\n      this.setState({\n        deleteMessageClass: \"alert alert-success\"\n      });\n      this.refreshTodos();\n    }).catch(error => {\n      this.setState({\n        message: \"Some error occured\"\n      });\n      this.setState({\n        deleteMessageClass: \"alert alert-success\"\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container padding\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }\n    }, \"Welcome \", sessionStorage.getItem('authenticatedUser'), \" \"), /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"header-todo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }\n    }, \"List To Do\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-success action-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 25\n      }\n    }, \"Add Task\")), this.state.successMessage && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alert alert-success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 51\n      }\n    }, this.state.successMessage), this.state.failureMessage && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alert alert-failure\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 51\n      }\n    }, this.state.failureMessage), /*#__PURE__*/React.createElement(\"table\", {\n      className: \"table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 37\n      }\n    }, \"Action\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 52\n      }\n    }, \"Description\"), \" \", /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 73\n      }\n    }, \"Target Date\"), \" \", /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 94\n      }\n    }, \"Completed?\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 25\n      }\n    }, this.state.todos.map(todo => /*#__PURE__*/React.createElement(\"tr\", {\n      key: todo.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-danger action-button\",\n      onClick: () => this.deleteTodoClicked(todo.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 45\n      }\n    }, \"Remove\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-success action-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 45\n      }\n    }, \"Complete\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-success action-button\",\n      onClick: () => this.updateTodoClicked(todo.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 45\n      }\n    }, \"Update\")), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 41\n      }\n    }, todo.description), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 68\n      }\n    }, moment(todo.targetDate).format(\"yyyy-mm-dd\").toString()), \" \", /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 135\n      }\n    }, todo.done.toString())))))));\n  }\n\n}\n\nexport default ListToDoComponent;","map":{"version":3,"sources":["C:/Users/jsagar2/JavaFullStackCourse/my-first-app/src/components/ToDo/ListToDoComponent.jsx"],"names":["React","Component","propTypes","BrowserRouter","Router","Route","Switch","Link","AuthenticationService","AuthenticatedRoute","TodoDataService","TodoComponent","moment","ListToDoComponent","constructor","props","state","todos","successMessage","failureMessage","deleteTodoClicked","bind","updateTodoClicked","refreshTodos","componentDidMount","username","getLoggedInUsername","retrieveAllTodos","then","response","setState","data","id","deleteTodo","catch","error","message","deleteMessageClass","render","sessionStorage","getItem","map","todo","description","targetDate","format","toString","done"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport \"./ToDoApp.css\"\r\n\r\nimport propTypes from \"prop-types\"\r\nimport {BrowserRouter as Router,Route,Switch,Link} from 'react-router-dom'\r\nimport AuthenticationService from './AuthenticationService.js'\r\nimport AuthenticatedRoute from \"./AuthenticatedRoute.jsx\"\r\nimport TodoDataService from \"../../api/todo/TodoDataService.js\"\r\nimport TodoComponent from \"./TodoComponent\"\r\nimport moment from 'moment'\r\n\r\n\r\nclass ListToDoComponent extends Component{  // Initial API call should not be done in constructor, the state will not be initialized untill the API call is completed, which s nto a good state to be in\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            todos :\r\n            [\r\n                // {id:1,description :\"Learn React\", done:false, targetDate : new Date},\r\n                // {id:2,description :\"Make money\", done:false, targetDate : new Date},\r\n                // {id:3,description :\"write story\", done:false, targetDate : new Date}\r\n            ],\r\n            successMessage : null,\r\n            failureMessage : null\r\n        }\r\n        this.deleteTodoClicked = this.deleteTodoClicked.bind(this);\r\n        this.updateTodoClicked = this.updateTodoClicked.bind(this);\r\n        this.refreshTodos = this.refreshTodos.bind(this);\r\n    }\r\n    componentDidMount(){ // when component is mounted, this method is called \r\n        let username = AuthenticationService.getLoggedInUsername();\r\n        TodoDataService.retrieveAllTodos(username)\r\n        .then(\r\n            response => {\r\n                //console.log(response)\r\n                this.setState({todos:response.data})\r\n            }\r\n        )\r\n    }\r\n    refreshTodos(){\r\n        let username = AuthenticationService.getLoggedInUsername();\r\n        // this.state.successMessage = null;\r\n        // this.state.failureMessage = null;\r\n        TodoDataService.retrieveAllTodos(username)\r\n        .then(\r\n            response => {\r\n                //console.log(response)\r\n                this.setState({todos:response.data})\r\n            }\r\n        )\r\n    }\r\n    deleteTodoClicked(id){\r\n        let username = AuthenticationService.getLoggedInUsername();\r\n        TodoDataService.deleteTodo(username,id)\r\n        .then(response =>{\r\n                this.setState({successMessage: \"Todo deleted succesfully\"});             \r\n                this.refreshTodos();\r\n            }\r\n        )\r\n        .catch(\r\n            error => {\r\n                this.setState({failureMessage: \"Some error occured\"});\r\n                \r\n            }\r\n        )\r\n\r\n    }\r\n    updateTodoClicked(id){\r\n        let username = AuthenticationService.getLoggedInUsername();\r\n        TodoDataService.deleteTodo(username,id)\r\n        .then(response =>{\r\n                this.setState({message: \"Todo deleted succesfully\"});\r\n                this.setState({deleteMessageClass: \"alert alert-success\"})\r\n                this.refreshTodos();\r\n            }\r\n        )\r\n        .catch(\r\n            error => {\r\n                this.setState({message: \"Some error occured\"});\r\n                this.setState({deleteMessageClass: \"alert alert-success\"})\r\n            }\r\n        )\r\n\r\n    }\r\n    render(){\r\n        return (\r\n            <div className=\"container padding\">\r\n                {/*<h2>Welcome {this.props.match.params.name} </h2>*/}\r\n                <h2>Welcome {sessionStorage.getItem('authenticatedUser')} </h2>\r\n                <h3 className='header-todo'>List To Do</h3>\r\n                <div className=\"container \">\r\n                    <div> \r\n                        \r\n                        <button className=\"btn btn-success action-button\">Add Task</button>  \r\n                        \r\n                    </div>\r\n                    {this.state.successMessage && <div className=\"alert alert-success\">\r\n                        {this.state.successMessage}\r\n                    </div>}\r\n                    {this.state.failureMessage && <div className=\"alert alert-failure\">\r\n                        {this.state.failureMessage}\r\n                    </div>}\r\n                    <table className=\"table\">\r\n                        <thead >\r\n                            <tr>\r\n                                    <th>Action</th><th>Description</th> <th>Target Date</th> <th>Completed?</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n\r\n                            {\r\n                                this.state.todos.map(\r\n                                    todo =>\r\n                                    <tr key={todo.id}>\r\n                                        <td>\r\n                                            <button className=\"btn btn-danger action-button\" onClick={() => this.deleteTodoClicked(todo.id)}>Remove</button>\r\n                                            <button className=\"btn btn-success action-button\">Complete</button> \r\n                                            <button className=\"btn btn-success action-button\"  onClick={() => this.updateTodoClicked(todo.id)}>Update</button> \r\n                                        </td>\r\n                                        <td>{todo.description}</td><td>{moment(todo.targetDate).format(\"yyyy-mm-dd\").toString()}</td> <td>{todo.done.toString()}</td>\r\n                                    </tr>\r\n                                ) \r\n                            }                      \r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default ListToDoComponent;"]},"metadata":{},"sourceType":"module"}