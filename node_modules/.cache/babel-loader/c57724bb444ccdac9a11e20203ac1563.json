{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jsagar2\\\\JavaFullStackCourse\\\\my-first-app\\\\src\\\\components\\\\ToDo\\\\TodoComponent.jsx\";\nimport React, { Component } from 'react';\nimport \"./ToDoApp.css\";\nimport moment from 'moment';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport TodoDataService from \"../../api/todo/TodoDataService.js\";\nimport AuthenticationService from './AuthenticationService.js';\n\nclass TodoComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: this.props.match.params.id,\n      description: \"learn react\",\n      targetDate: moment(new Date()).format(\"YYYY-MM-DD\")\n    };\n    this.onSubmit = this.onSubmit.bind(this);\n    this.validate = this.validate.bind(this);\n  }\n\n  componentDidMount() {\n    let username = AuthenticationService.getLoggedInUsername();\n    TodoDataService.retrieveTodo(username, this.state.id).then(response => {\n      this.setState({\n        description: response.description,\n        targetDate: response.targetDate\n      });\n    });\n  }\n\n  onSubmit(values) {\n    console.log(values);\n  }\n\n  validate(values) {\n    console.log(values);\n    let errors = {};\n\n    if (!values.description) {\n      errors.description = \"Enter a description\";\n    } else if (values.description.length < 5) {\n      errors.description = \"Description should have atleast 5 characters\";\n    }\n\n    if (!moment(values.targetDate).isValid()) {\n      errors.targetDate = \"Target Date is invalid\";\n    }\n\n    return errors;\n  }\n\n  render() {\n    let description = this.state.description;\n    let targetDate = this.state.targetDate;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }\n    }, \" Todo \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Formik, {\n      initialValues: {\n        description,\n        targetDate\n      },\n      onSubmit: this.onSubmit,\n      validate: this.validate,\n      validateOnChange: false,\n      validateOnBlur: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }\n    }, props => /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(ErrorMessage, {\n      name: \"description\",\n      component: \"div\",\n      className: \"alert alert-warning\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"fieldset\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 41\n      }\n    }, \"Description\"), /*#__PURE__*/React.createElement(Field, {\n      className: \"form-control\",\n      type: \"text\",\n      name: \"description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(ErrorMessage, {\n      name: \"targetDate\",\n      component: \"div\",\n      className: \"alert alert-warning\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"fieldset\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 41\n      }\n    }, \"Target Date\"), /*#__PURE__*/React.createElement(Field, {\n      className: \"form-control\",\n      type: \"date\",\n      name: \"targetDate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-success padding\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 37\n      }\n    }, \"Save\")))));\n  }\n\n}\n\nexport default TodoComponent;","map":{"version":3,"sources":["C:/Users/jsagar2/JavaFullStackCourse/my-first-app/src/components/ToDo/TodoComponent.jsx"],"names":["React","Component","moment","Formik","Form","Field","ErrorMessage","TodoDataService","AuthenticationService","TodoComponent","constructor","props","state","id","match","params","description","targetDate","Date","format","onSubmit","bind","validate","componentDidMount","username","getLoggedInUsername","retrieveTodo","then","response","setState","values","console","log","errors","length","isValid","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,eAAP;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAAQC,MAAR,EAAeC,IAAf,EAAqBC,KAArB,EAA2BC,YAA3B,QAA8C,QAA9C;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AAEA,OAAOC,qBAAP,MAAkC,4BAAlC;;AAEA,MAAMC,aAAN,SAA4BR,SAA5B,CAAqC;AACjCS,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,EAAE,EAAE,KAAKF,KAAL,CAAWG,KAAX,CAAiBC,MAAjB,CAAwBF,EADnB;AAETG,MAAAA,WAAW,EAAG,aAFL;AAGTC,MAAAA,UAAU,EAAGf,MAAM,CAAC,IAAIgB,IAAJ,EAAD,CAAN,CAAmBC,MAAnB,CAA0B,YAA1B;AAHJ,KAAb;AAKA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcD,IAAd,CAAmB,IAAnB,CAAhB;AACH;;AAEDE,EAAAA,iBAAiB,GAAE;AACf,QAAIC,QAAQ,GAAGhB,qBAAqB,CAACiB,mBAAtB,EAAf;AACAlB,IAAAA,eAAe,CAACmB,YAAhB,CAA6BF,QAA7B,EAAsC,KAAKZ,KAAL,CAAWC,EAAjD,EACCc,IADD,CAEIC,QAAQ,IAAI;AACR,WAAKC,QAAL,CAAc;AACVb,QAAAA,WAAW,EAACY,QAAQ,CAACZ,WADX;AAEVC,QAAAA,UAAU,EAACW,QAAQ,CAACX;AAFV,OAAd;AAIH,KAPL;AASH;;AACDG,EAAAA,QAAQ,CAACU,MAAD,EAAQ;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACH;;AACDR,EAAAA,QAAQ,CAACQ,MAAD,EAAQ;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,QAAIG,MAAM,GAAG,EAAb;;AACA,QAAG,CAACH,MAAM,CAACd,WAAX,EAAuB;AACnBiB,MAAAA,MAAM,CAACjB,WAAP,GAAqB,qBAArB;AACH,KAFD,MAGK,IAAGc,MAAM,CAACd,WAAP,CAAmBkB,MAAnB,GAA2B,CAA9B,EAAgC;AACjCD,MAAAA,MAAM,CAACjB,WAAP,GAAqB,8CAArB;AACH;;AACD,QAAG,CAACd,MAAM,CAAC4B,MAAM,CAACb,UAAR,CAAN,CAA0BkB,OAA1B,EAAJ,EAAwC;AACpCF,MAAAA,MAAM,CAAChB,UAAP,GAAoB,wBAApB;AACH;;AAGD,WAAOgB,MAAP;AACH;;AACDG,EAAAA,MAAM,GAAE;AACJ,QAAIpB,WAAW,GAAG,KAAKJ,KAAL,CAAWI,WAA7B;AACA,QAAIC,UAAU,GAAG,KAAKL,KAAL,CAAWK,UAA5B;AACA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI,oBAAC,MAAD;AAAQ,MAAA,aAAa,EAAI;AAACD,QAAAA,WAAD;AAAcC,QAAAA;AAAd,OAAzB;AACA,MAAA,QAAQ,EAAE,KAAKG,QADf;AAEA,MAAA,QAAQ,EAAE,KAAKE,QAFf;AAEyB,MAAA,gBAAgB,EAAE,KAF3C;AAEkD,MAAA,cAAc,EAAE,KAFlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAISX,KAAD,iBACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAC,aAAnB;AAAiC,MAAA,SAAS,EAAC,KAA3C;AAAiD,MAAA,SAAS,EAAC,qBAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAU,MAAA,SAAS,EAAC,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,eAEI,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAC,cAAjB;AAAgC,MAAA,IAAI,EAAE,MAAtC;AAA6C,MAAA,IAAI,EAAC,aAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAFJ,eAMI,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAC,YAAnB;AAAgC,MAAA,SAAS,EAAC,KAA1C;AAAgD,MAAA,SAAS,EAAC,qBAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,eAOI;AAAU,MAAA,SAAS,EAAC,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,eAEI,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAC,cAAjB;AAAgC,MAAA,IAAI,EAAE,MAAtC;AAA6C,MAAA,IAAI,EAAC,YAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAPJ,eAWI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,yBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXJ,CALZ,CAFJ,CAFJ,CADJ;AA+BH;;AA7EgC;;AAgFrC,eAAeF,aAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport \"./ToDoApp.css\"\r\nimport moment from 'moment'\r\nimport {Formik,Form, Field,ErrorMessage} from 'formik'\r\nimport TodoDataService from \"../../api/todo/TodoDataService.js\"\r\n\r\nimport AuthenticationService from './AuthenticationService.js'\r\n\r\nclass TodoComponent extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            id :this.props.match.params.id,\r\n            description : \"learn react\",\r\n            targetDate : moment(new Date()).format(\"YYYY-MM-DD\")\r\n        }\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validate = this.validate.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        let username = AuthenticationService.getLoggedInUsername()\r\n        TodoDataService.retrieveTodo(username,this.state.id)\r\n        .then(\r\n            response => {\r\n                this.setState({\r\n                    description:response.description,\r\n                    targetDate:response.targetDate\r\n                })\r\n            }\r\n        )\r\n    }\r\n    onSubmit(values){\r\n        console.log(values)\r\n    }\r\n    validate(values){\r\n        console.log(values);\r\n        let errors = {};\r\n        if(!values.description){\r\n            errors.description = \"Enter a description\"\r\n        }\r\n        else if(values.description.length <5){\r\n            errors.description = \"Description should have atleast 5 characters\"\r\n        }\r\n        if(!moment(values.targetDate).isValid()){\r\n            errors.targetDate = \"Target Date is invalid\"\r\n        }\r\n        \r\n\r\n        return errors;\r\n    }\r\n    render(){\r\n        let description = this.state.description;\r\n        let targetDate = this.state.targetDate;\r\n        return (\r\n            <div>\r\n                <h1> Todo </h1>\r\n                <div className=\"container\">\r\n\r\n                    <Formik initialValues = {{description, targetDate }} \r\n                    onSubmit={this.onSubmit} \r\n                    validate={this.validate} validateOnChange={false} validateOnBlur={false}>\r\n                        {\r\n                            (props) => (\r\n                                <Form>\r\n                                    <ErrorMessage name=\"description\" component=\"div\" className=\"alert alert-warning\"/>\r\n                                    <fieldset className=\"form-group\">\r\n                                        <label>Description</label>\r\n                                        <Field className=\"form-control\" type =\"text\" name=\"description\"/>\r\n                                    </fieldset>\r\n                                    <ErrorMessage name=\"targetDate\" component=\"div\" className=\"alert alert-warning\"/>\r\n                                    <fieldset className=\"form-group\">\r\n                                        <label>Target Date</label>\r\n                                        <Field className=\"form-control\" type =\"date\" name=\"targetDate\"/>\r\n                                    </fieldset>\r\n                                    <button type=\"submit\" className=\"btn btn-success padding\">Save</button>\r\n                                </Form>\r\n                            )\r\n                        }\r\n\r\n                    </Formik>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TodoComponent;"]},"metadata":{},"sourceType":"module"}